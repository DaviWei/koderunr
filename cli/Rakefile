TARGETS = [
  {os: 'darwin', arch: 'amd64'},
  {os: 'linux', arch: 'arm', goarm: '6'},
  {os: 'linux', arch: 'amd64'},
  {os: 'linux', arch: '386', go386: '387'},
  {os: 'openbsd', arch: 'amd64'},
  {os: 'openbsd', arch: '386'},
  {os: 'freebsd', arch: 'amd64'},
  {os: 'freebsd', arch: '386'},
]

VERSION = `./version`.chomp

desc "show supported OS and Arch"
task :list do
  puts "Supported OS and Arch:"
  TARGETS.each do |target|
    puts "  * #{target[:os]} #{target[:arch]}"
  end
end

desc "cross compile the Kode cli"
task :cross_compile do
  puts "Building #{VERSION} kode cli"
  FileUtils.mkdir_p "build"

  TARGETS.each do |target|
    ok = build(target)
    exit 1 unless ok
  end

  ok = system("tar -zcvf ./build/kode-#{VERSION}.tar.gz ./build/*")

  puts "Build successfully!" if ok
end

desc "build the Kode cli for a specific OS and Arch"
task :build, [:os, :arch] do |_, args|
  os = args[:os]
  arch = args[:arch]
  target = {os: os, arch: arch}

  unless TARGETS.include?(target)
    puts "Sorry currently does not support #{os} and #{arch}"
    exit 1
  end

  FileUtils.mkdir_p "build"

  if build(target)
    puts "Build successfully!"
  else
    puts "Build failed..."
    exit 1
  end
end

desc "Clear the build"
task :clean do
  FileUtils.rm_rf "build"
end

def build(target)
  puts " *** #{target[:os]} - #{target[:arch]} ***"

  path = "./build/#{target[:os]}/#{target[:arch]}/kode"

  endpoint = if ENV["DEBUG"]
    "http://127.0.0.1:8080"
  else
    "http://koderunr.tech"
  end

  ldflags = [
    "-X main.Version=#{VERSION}",
    "-X github.com/jaxi/koderunr/cli/commands.Endpoint=#{endpoint}",
  ].join(" ")
  args = ["-o", "#{path}", "-ldflags", "\"#{ldflags}\""]

  vars = ["GOOS=#{target[:os]}", "GOARCH=#{target[:arch]}"]
  vars << "GO386=#{target[:go386]}" if target[:go386]
  vars << "GOARM=#{target[:goarm]}" if target[:goarm]

  system("#{vars.join(' ')} go build #{args.join(' ')}")
end
